---
import HeaderSection from "@/components/astro/header-section.astro";
import TocSection from "@/components/astro/toc-section.astro";
import ArticleLayout from "@/layouts/ArticleLayout.astro";
import ProseLayout from "@/components/Prose.astro";

import { type CollectionEntry, getCollection, render } from "astro:content";

import { sortItemsByDateDesc } from "@/lib/article";
import { toSlug, formatDate } from "@/lib/utils";

export async function getStaticPaths() {
  const articles = (await getCollection("article")).sort(sortItemsByDateDesc);

  return articles.map((article: CollectionEntry<"article">, index: number) => ({
    params: {
      slug: toSlug(article.data.title),
      desc: article.data.description ?? "Description",
      title: article.data.title ?? "Title",
    },
    props: {
      article,
      prevArticle: index + 1 !== articles.length ? articles[index + 1] : null,
      nextArticle: index !== 0 ? articles[index - 1] : null,
    },
  }));
}

type Props = {
  article: CollectionEntry<"article">;
  prevArticle: CollectionEntry<"article"> | null;
  nextArticle: CollectionEntry<"article"> | null;
};

const { article } = Astro.props;
const { title, description, pubDate, tags } = article.data;

const { Content, remarkPluginFrontmatter, headings } = await render(article);
---

<ArticleLayout title={title} description={description}>
  <HeaderSection
    minutesRead={remarkPluginFrontmatter.minutesRead}
    formatedDate={formatDate(pubDate)}
    slot="header-section"
    title={title}
    tags={tags}
  />
  <TocSection slot="toc-section" headings={headings} />
  <ProseLayout slot="content-section">
    <Content />
  </ProseLayout>
</ArticleLayout>
